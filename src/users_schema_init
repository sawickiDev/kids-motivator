create table if not exists passwords_table
(
  password_id integer not null,
  password varchar(150) not null,
  constraint "password_pk" primary key (password_id)
);

create sequence if not exists passwords_seq start with 1 increment by 1;

create table if not exists users_table
(
  user_id integer not null,
  first_name varchar(40) not null,
  last_name varchar(40) not null,
  user_name varchar(40) not null,
  active boolean not null default true,
  password_id integer not null,
  constraint "username_uni" unique (user_name),
  constraint "user_pk" primary key (user_id),
  constraint "user_pass_fk" foreign key (password_id) references passwords_table (password_id)
);

create sequence if not exists users_seq start with 1 increment by 1;

create table if not exists parent_child_table
(
  parent_id integer not null,
  child_id integer not null,
  constraint "parent_child_pk" primary key (parent_id, child_id)
);

create table if not exists roles_table
(
  role_id integer not null,
  role varchar(20) not null,
  constraint "roles_pk" primary key (role_id)
);

create sequence if not exists roles_seq start with 1 increment by 1;

create table if not exists user_role_table
(
  user_id integer not null,
  role_id integer not null,
  constraint "user_role_pk" primary key (user_id, role_id)
);

create table if not exists missions_table
(
  mission_id integer not null,
  mission_title varchar(50) not null,
  mission_description varchar(100) not null,
  mission_stage varchar(10) not null,
  mission_value integer not null,
  mission_deadline date not null,
  owner integer not null,
  assignee integer,
  constraint "mission_pl" primary key (mission_id),
  constraint "mission_owner_fk" foreign key (owner) references users_table (user_id),
  constraint "mission_assignee_fk" foreign key (assignee) references users_table (user_id)
);

create sequence if not exists missions_seq start with 1 increment by 1;
